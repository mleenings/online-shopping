{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/products/product-list/product-list.component.html","webpack:///src/app/products/product-list/product-list.component.ts","webpack:///src/app/products/product.model.ts","webpack:///src/app/products/product.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///src/app/products/products.component.ts","webpack:///src/app/products/products.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","api","products","ProductListComponent","productService","getProducts","subscribe","Product","productId","productName","httpOptions","headers","ProductService","http","productUrl","get","pipe","tasks","console","log","handleError","id","task","product","post","JSON","stringify","result","error","AppComponent","title","AppModule","routes","AppRoutingModule","forRoot","bootstrapModule","err","ProductsComponent","newProduct","addProduct","newTask","concat","onSave","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api : {\n    products: 'http://localhost:9411/api/products/'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <ul class=\"list-group\">\n            <li *ngFor=\"let product of products\" class=\"list-group-item\">{{product}}</li>\n        </ul>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Product } from '../product.model';\nimport { ProductService } from '../product.service';\n\n@Component({\n    selector: 'app-product-list',\n    templateUrl: './product-list.component.html',\n    styleUrls: ['./product-list.component.scss']\n})\nexport class ProductListComponent implements OnInit {\n    products: Product[] = [];\n\n    constructor(private productService: ProductService) {\n    }\n\n    ngOnInit() {\n        this.productService\n            .getProducts()\n            .subscribe(products => {\n                this.products = products;\n        });\n    }\n}\n","\nexport class Product {\n    public productId: number | undefined;\n    public productName: string | undefined;\n\n    constructor(productId?: number, productName?: string) {\n            this.productId = productId;\n            this.productName = productName;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Product } from './product.model';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport { environment } from '../../environments/environment'\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'}),\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProductService {\n    private productUrl = environment.api.products;\n\n    constructor(private http: HttpClient) {}\n\n    getProducts(): Observable<Product[]> {\n        return this.http.get<Product[]>(this.productUrl, httpOptions).pipe(\n            tap((tasks) => console.log(tasks)),\n            catchError(this.handleError([])),\n        );\n    }\n\n    getProductById(id: number): Observable<Product> {\n        return this.http.get<Product>(this.productUrl + id, httpOptions).pipe(\n            tap((task) => console.log(task)),\n            catchError(this.handleError<Product>()),\n        );\n    }\n\n    addProduct(product: Product): Observable<Product> {\n        return this.http.post<Product>(this.productUrl, JSON.stringify(product), httpOptions).pipe(\n            tap((task) => console.log(task)),\n            catchError(this.handleError<Product>()),\n        );\n    }\n\n    private handleError<T>(result?: T) {\n        return (error: any): Observable<T> => {\n            console.error(error);\n            return of(result as T);\n        };\n    }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Online-Shop';\n}\n","<div class=\"container\">\n  <h1>{{title}}</h1>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <app-products></app-products>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductService } from './products/product.service';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    ProductListComponent,\n  ],\n  exports: [\n    ProductsComponent,\n    ProductListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [ProductService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\n\nimport { Product } from './product.model';\nimport { ProductService } from './product.service';\n\n@Component({\n    selector: 'app-products',\n    templateUrl: './products.component.html',\n    styleUrls: ['./products.component.scss'],\n    providers: [ProductService]\n})\nexport class ProductsComponent implements OnInit {\n    products: Product[] = [];\n    newProduct: Product = new Product();\n    constructor(private productService: ProductService) { }\n\n    ngOnInit() {\n        this.productService\n            .getProducts()\n            .subscribe(\n                (products) => {\n                    this.products = products;\n                }\n            );\n    }\n\n    addProduct(product: Product) {\n        this.productService\n            .addProduct(product)\n            .subscribe(\n                (newTask) => {\n                    this.products = this.products.concat(newTask);\n                    this.newProduct = new Product();\n                },\n            );\n    }\n\n    onSave() {\n        this.addProduct(this.newProduct);\n        this.newProduct = new Product();\n    }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n            <label for=\"productId\">Product-Id</label>\n            <input id=\"productId\" [(ngModel)]=\"newProduct.productId\" autofocus=\"\" placeholder=\"product id\" class=\"ml-2 mr-5\">\n            <label for=\"productName\">Product-Name</label>\n            <input id=\"productName\" [(ngModel)]=\"newProduct.productName\" autofocus=\"\" placeholder=\"product name\" class=\"ml-2 mr-5\">\n            <button type=\"button\" class=\"btn btn-primary float-right\" (click)=\"onSave()\">New Product</button>\n    </div>\n</div>\n<hr/>\n<div class=\"row\">\n    <app-product-list></app-product-list>\n</div>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}